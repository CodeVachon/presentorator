extends ../includes/layout.jade
block title
	title="DevOpsDays Toronto 2014"
block sytle
	style
		@import url('/includes/css/default.css');
block deck
	//- Slide 1 - Intro
	cmv-slidegroup
		cmv-slide
			header
				h1 DevOpsDays Toronto 2014
				p Friday, September 12 to Saturday, September 13

	//- Slide 2 - Key Note Slide
	cmv-slidegroup
		cmv-slide
			header
				h1 Keynote
				p.author Luke Kanies
				p.author Founder and CEO of Puppet
			ul.steps
				li No one knows what devops is, but everyones excited to have it solve thier problems.
				li Short Cycle Times result in faster growth and learning
				li DevOps is like the Industrial Revolution
					ul
						li Developers and Companies are moving towards specilization
						li A Specialist will produce a valuable product

	//- Slide 3 - DevOps Against Inhumanity
	cmv-slidegroup
		cmv-slide
			header
				h1 DevOps Against Inhumanity
				p.author Julian Dunn
				p.author From: Chef
			ul.steps
				li Ticketing Systems being used as a tool to opress people
				li On Call Sucks!
				li Agile as a way to manage cost
				li Dev Teams 100% responsible without any authority
		cmv-slide
			header
				h2 How do you make the inhuman more humane
			ul.steps
				li Develop Relationships with other Departments
				li Switch: How to make change with change is hard [book]
				li Do not be afraid to try new things

	//- Slide 4 - Here, There, Everywhere
	cmv-slidegroup
		cmv-slide
			header
				h1 Here, There, Everywhere
				h2 Rules and tools for Distributed Teams
				p.author Joel Perras
			ul.steps
				li Fictive Kin: Work hard, be Kind
				li 11 employees accross the world
				li Communication and Transparency is Key
		cmv-slide
			header
				h2 Communication
			ul.steps
				li Instant: Skype, IRC, Google Hangout, Campfire
				li Persistant: Email
				li Permanant: Wikis, Issues, Pull Requests, Comments
				li If a communication does not exists in Persistant or Permanant means, it never happend.
		cmv-slide
			header
				h2 Development
			ul.steps
				li Vagrant
				li AWS
				li SaltStack | Puppet | Chef
				li VPN's
				li StatsD - Application Metrics

	//- Slide 5 - Breaking the Monolith
	cmv-slidegroup
		cmv-slide
			header
				h1 Breaking the Monolith
				h2 Moving to a microservice based architecture
				p.author Paul Osman
			ul.steps
				li Monolith: Large, all encompusing systems
				li Pros of Monoliths
					ul
						li Easy to Picture
						li Few Moving Parts
						li 1 Stack
				li Cons of Monoliths
					ul
						li Scaling is an "All or Nothing" solution
						li Change Cycles are linked
						li Single Responsibility Principal (SRP) is hard to maintain
						li Harder to Isolate Single Points of Failure
		cmv-slide
			header
				h2 Microservices
			ul.steps
				li Microservices: having multiple dedicated services to communicating with one another via a unified protocol.
				li Micro is Important! keeps things small and dedicated
				li Common Characteristics
					ul
						li multiple programs
						li can use different languages
						li centralized domain ownership
		cmv-slide
			header
				h2 Things Learned
			ul.steps
				li DevOps is Important!
				li Measure EVERYTHING
				li Use Circuit Breakers - Read: "Release it"
				li Run Gameday Exercises
				li Test in Production

	//- Slide 6 - Failure Friday
	cmv-slidegroup
		cmv-slide
			header
				h1 Failure Friday!
				h2 Start injecting failure today
				p.author Doug Barth
			ul.steps
				li Bugs in exceptional core paths
				li Systems not recovering as quickly as expected
				li What is Normal when things are abnormal?
		cmv-slide
			header
				h2 Process
			ul.steps
				li Get Buy In from Everyone
				li Meet to discuss the attackers and victems
				li Before Starting
					ul
						li Stop any scheduled tasks
						li announce the start
						li open dask boards
						li Leave alerts enabled
		cmv-slide
			header
				h2 Attacks
			ul.steps
				li start on single hosts, then the data center
				li 5 mins per attack
				li Return system to working state
		cmv-slide
			header
				h2 Deliverables
			ul.steps
				li Track Actions Taken
				li Times are Important
				li Track Discoveries and TODO's
				li Chatrooms make things easy
		cmv-slide
			header
				h2 Wrapping Up
			ul.steps
				li Sound an All Clear
				li restore systems and settings
		cmv-slide
			header
				h2 Culteral Impact
			ul.steps
				li Knowledge Sharing
				li Highlights Untestable Systems
				li Developers know there systems will be tested

	//- Slide 7 - Continuous Delivery for the Rest of Us
	cmv-slidegroup
		cmv-slide
			header
				h1 Continuous Delivery for the Rest of Us
				p.author Lisa van Gelder
			ul.steps
				li Continuous Delivery is Not
					ul
						li Continuous Deployment
						li Automating all the things
				li But it is: ensuring continious testing and content delivery
		cmv-slide
			header
				h2 Tools
			ul.steps
				li Chaos Monkey - takes out servers
				li Latency Monkey - injects latency
				li Other Monkeys - GitHub: NetFlix Chaos Monkey Army
				li Canary Testing
		cmv-slide
			header
				h2 Where to Start
			ul.steps
				li Double Release Frequency
				li Smaller Releases
				li If you can't Release: Fake It!
				li Test as soon as you can
				li If a Release breaks functionality, you are probably missing a test

	//- Slide 8 - Speeding Up Enterprises, One Deploy at a Time
	cmv-slidegroup
		cmv-slide
			header
				h1 Speeding Up Enterprises, One Deploy at a Time
				p.author Stuart Charlton
			ul.steps
				li Whats comes first, Culture or Techology
					ul
						li Neither. These are Reflexive
				li Getting others to see the system
				li Architechure maters

	//- Slide 9 - DevOps First, Agile Second
	cmv-slidegroup
		cmv-slide
			header
				h1 DevOps First, Agile Second
				p.author Chris Sandico
			ul.steps
				li DevOps + Agile = :/
					ul
						li Outside teams do not always understand these are different things
				li DevOps as a means to stop fighting fires
				li Car Analogy
					ul 
						li DevOps is the Engine
						li Agile is the Feul 
		cmv-slide
			header
				h2 Setup for Success
			ul.steps
				li Executive Support
				li Lead the change
				li Empower Developers

	//- Slide 10 - Introducing DevOps to the Enterprise, one log at a time
	cmv-slidegroup
		cmv-slide
			header
				h1 Introducing DevOps to the Enterprise, one log at a time
				p.author Derek Stadnicki and Shane Rainville
			ul.steps
				li The Problem
					ul
						li Development and Operations have different tools to solve problems
				li A solution
					ul
						li DevOps Amelgamated all the tools into a single dashboard location
		cmv-slide
			header
				h2 What was found?
			ul.steps
				li DevOps picked a server, and what logs to parse
				li Day 1 of the dashboard found that apache was producing 12.4 Gigs of Error Logs per Day
					ul
						li with the dashboard they were able to pinpoint the problem to a single perl script on the server

	//- Slide 11 - The End
	cmv-slidegroup
		cmv-slide
			header
				h1 The End
