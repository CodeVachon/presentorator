extends ../includes/layout.jade


block title
  title="FSTO"


block style
  style
    @import url('/includes/css/fsto.min.css');


block deck
  cmv-slidegroup
    cmv-slide
      header
        h1 FSTO 2015
        p FullStack Toronto 2015
      ul.steps
        li Saturday, November the 14th, and Sunday the 15th, 2015


  cmv-slidegroup
    cmv-slide
      header
        h1 DevOps Pipeline
      ul.steps
        li Automated Testing
        li Pipeline Map
        li Start by automating one peice at a time. Don't try to automate your entire pipe at once


  cmv-slidegroup
    cmv-slide
      header
        h1 Using Hypermedia APIs to Drive Interactive Mobile Applications
      ul.steps
        li Use gzip
        li supports etags
        li cache control headers
        li breakup up resources in line with cacheability
        li componentize resources to allow UI to draw data loads
        li forms can add a lot of API flexibility


  cmv-slidegroup
    cmv-slide
      header
        h1 Evolving Web Applications with Module Based Design Components
      ul.steps
        li Design Compants and not Applications
          ul
            li Design the Button on the page, not the page the button fits into
        li Create and Use a Living Style Guide for the Brand
        li BreakUp Colour Pallets into Primary, Secondary, and Teirtiary 


  cmv-slidegroup
    cmv-slide
      header
        h1 Application Performance Monitoring is the New Unit Testing
      ul.steps
        li Randomize Unit Tests
        li top down and bottom up Monitoring is important
        li How to get Started
        li Unit Tests 
        li Integration Tests 
        li tools: graphite, statsd 


  cmv-slidegroup
    cmv-slide
      header
        h1 Re-evaluating Front-end Performance Best Practices
      ul.steps
        li
          a(href="https://en.wikipedia.org/wiki/Cargo_cult") Cargo Cult
          ul
            li go back and reevaluate techniquies
        li hosting sharding
          ul
            li No longer applicable because browsers now create mutiple connections to the server to get its assets
        li JS: Looping
          ul
            li Cached is no longer required, JavaScript Engines now do this in the background for you.
        li Dynamic Script Insertion
          ul
            li May be causing more issues than solving


  cmv-slidegroup
    cmv-slide
      header
        h1 Ionic: V2 and Beyond
      ul.steps
        li Attibutes instead of classes
        li platform continuity 
        li entirely rethough navigation
          ul
            li push and pop functionality
        li SASS
        li Web Animation API
        li ES6 and TypeScript Compatible
        li: a(href="ionic.io/2") ionic.io/2


  cmv-slidegroup
    cmv-slide
      header
        h1 Beyond Angular and React
        p Handling the deeper parts of the front end stack with Flux and Redux
      ul.steps
        li Angular or React
          ul
            li it doesn't matter, whats matters is how you handle complexity
        li build compant based UIs
          ul
            li dumb compontants
            li smart compontants
            li smartish compontants
        li stateless approch
          ul
            li pure functions


  cmv-slidegroup
    cmv-slide
      header
        h1 The End
